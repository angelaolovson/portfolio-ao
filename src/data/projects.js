export default [
    {
        image:"/images/ora-screenshot.png",
        projectTitle:"Ora – E-Commerce Website for a Flower Shop",
        projectSubTitle:"Built to streamline online shopping, order tracking, and inventory management.",
        liveDemoLink:"https://capstone-ora-frontend.onrender.com/",
        gitHubRepoLink:"https://github.com/angelaolovson/project4-ora-frontend",
        description:"Designed and developed a full-stack e-commerce web app for a flower shop using React, Node.js, Express, and MongoDB. The platform allows customers to browse products, manage their cart, and securely check out with automatic inventory updates. Implemented full CRUD functionality for both users and administrators, including user account views, order summaries, and an admin dashboard for inventory management.",
        myRole:"Solo Developer – Responsible for full UI/UX design, frontend and backend architecture, API integration, and deployment.",
        keyChallenges:["Full CRUD operations on both frontend and backend","State management across cart and user sessions","RESTful API design with secure data handling", "Responsive design and mobile optimization"],
        tools:"JavaScript • React • Express • Node.js • MongoDB • Postman • Bootstrap • CSS3",
    },
    {
        image:"/images/casaAmor-screenshot.png",
        projectTitle:"CasaAmor – Honeymoon Vacation Rental Platform",
        projectSubTitle:"An Airbnb-inspired web app designed to help couples find and book romantic getaways.",
        liveDemoLink:"",
        gitHubRepoLink:"",
        description:"Collaboratively built a full-stack vacation rental platform tailored for honeymooners. Implemented full CRUD functionality across listings, bookings, reviews, and user accounts. Developed backend routes for property listings and integrated filtering capabilities on the homepage. On the frontend, created the homepage layout, listing detail pages with interactive maps (Google Maps API), image galleries, booking interface, and review submission forms using React.",
        myRole:"Backend and Frontend Developer – Responsible for implementing listing CRUD functionality, route logic, and homepage filters on the backend. On the frontend, built UI components for the homepage, property detail views, maps, and booking flows.",
        keyChallenges:["Designing and connecting RESTful APIs for multiple related models","Filtering and displaying listing data dynamically","Integrating Google Maps API with React","Building a consistent UI across team-developed components","Managing data flow and state between listings, bookings, and reviews"],
        tools:"JavaScript • React • Node.js • Express • MongoDB • Bootstrap • Postman • CSS3",
    }, 
    {
        image:"/images/beerFridge-screenshot.webp",
        projectTitle:"Beer Fridge – Craft Beer Inventory App",
        projectSubTitle:"A full-stack app to manage and rearrange your beer collection.",
        liveDemoLink:"",
        gitHubRepoLink:"",
        description:"Built a full-stack web app where users can add, edit, delete, and view custom beer can entries. Designed RESTful API routes using Express, Node.js, and MongoDB with Mongoose. Implemented a drag-and-drop feature to reorder items inside the virtual fridge, enhancing interactivity.",
        myRole:"Full-Stack Developer – Handled backend route creation, database schema design, and UI development, including the drag-and-drop fridge layout.",
        keyChallenges:["Implementing drag-and-drop reordering with consistent state updates","Designing intuitive CRUD flows for beer entries","Structuring RESTful routes and data models"],
        tools:"JavaScript • CSS3 • EJS • Express • Node.js • MongoDB • Postman",
    }, 
    {
        image:"/images/tamapotchi-screenshot.webp",
        projectTitle:"Tamapotchi – Plant-Themed Virtual Pet Game",
        projectSubTitle:"A browser-based game where players grow and care for a virtual plant.",
        liveDemoLink:"",
        gitHubRepoLink:"",
        description:"Built an interactive plant-care game inspired by Tamagotchi, featuring hover-enabled instructions and real-time visual feedback based on plant health. Used setInterval and setTimeout for managing game logic and animations, including plant growth stages and win/loss conditions. Interactive buttons trigger updates and animations, creating an engaging user experience.",
        myRole:"Solo Developer – Responsible for UI/UX design, game logic, animation handling, and visual asset creation.",
        keyChallenges:["Managing real-time plant health states using timers","Creating responsive, animated UI interactions","Designing a rewarding progression system through care actions"],
        tools:"JavaScript • CSS3 • HTML5 • Photoshop",
    }, 
]
