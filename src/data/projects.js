export default [
    {
        image:"/images/ora-screenshot.png",
        projectTitle:"Ora – E-Commerce Flower Shop Website",
        projectSubTitle:"An online platform for browsing, ordering, and managing products.",
        liveDemoLink:"https://capstone-ora-frontend.onrender.com/",
        gitHubRepoLink:"https://github.com/angelaolovson/project4-ora-frontend",
        description:"Developed a full-stack e-commerce website using React, Express, Node.js, and MongoDB. Customers can browse products, manage carts, and check out. Built an admin dashboard for full CRUD control over inventory and orders.",
        myRole:"Solo Developer – Led design, frontend/backend architecture, API integration, and deployment.",
        keyChallenges:["Full CRUD operations on both frontend and backend","State management across cart and user sessions","RESTful API design with secure data handling"],
        tools:"JavaScript • React • Express • Node.js • MongoDB • Postman • Bootstrap • CSS3",
    },
    {
        image:"/images/casaAmor-screenshot.png",
        projectTitle:"CasaAmor – Honeymoon Rental Platform",
        projectSubTitle:"An Airbnb-style app helping couples find and book romantic getaways.",
        liveDemoLink:"https://casaamor-3fab6.web.app/",
        gitHubRepoLink:"https://github.com/jialingye/project3-FrontEnd",
        description:"A full-stack rental platform where users can book romantic getaways, manage trips, write reviews, and list properties as hosts. Built authentication, CRUD features for listings, bookings, and reviews, wishlist functionality, and host dashboards. Used RESTful APIs, React for dynamic UI, MongoDB for data modeling, and integrated Google Maps for location-based listings.",
        myRole:"Full-Stack Developer – Handled backend logic for property listing, booking and filter, and built frontend components for homepage, each property, and booking flow.",
        keyChallenges:["Designing RESTful APIs for listings & booking models","Filtering listing data","Integrating Google Maps API with React","Maintaining UI consistency for the team"],
        tools:"JavaScript • React • Node.js • Express • MongoDB • Bootstrap • Postman • CSS3",
    }, 
    {
        image:"/images/beerFridge-screenshot.webp",
        projectTitle:"Beer Fridge – Craft Beer Inventory App",
        projectSubTitle:"A CRUD app to track and manage your beer collection.",
        liveDemoLink:"https://beerfridge.onrender.com/beers",
        gitHubRepoLink:"https://github.com/angelaolovson/BeerFridge",
        description:"A full-stack app where users can add, edit, delete, and view custom beer entries. Built with Express, MongoDB, and EJS templates, styled with CSS. Practiced RESTful routing and dynamic page rendering.",
        myRole:"Full-Stack Developer – Built backend routes, created the beer model, and developed EJS pages with form handling and custom styles.",
        keyChallenges:["Designing clean RESTful routes","Implementing full CRUD with EJS templates", "Structuring Mongoose schema and model"],
        tools:"JavaScript • Node.js • Express • MongoDB • EJS • CSS • Postman",
    }, 
    {
        image:"/images/tamapotchi-screenshot.webp",
        projectTitle:"Tamapotchi – Plant-Themed Virtual Pet Game",
        projectSubTitle:"A browser-based game where players grow and care for a digital plant.",
        liveDemoLink:"https://angelaolovson.github.io/Tamapotchi/",
        gitHubRepoLink:"https://github.com/angelaolovson/Tamapotchi",
        description:"My first project—a plant-care game built with vanilla JavaScript, HTML, and CSS. Players keep a virtual plant alive by balancing sunlight, water, fertilizer, and pesticide. Includes interactive buttons, animated feedback, and timed events for plant growth and health.",
        myRole:"Solo Developer – Designed gameplay mechanics, built all UI and animations, and implemented game logic using JavaScript timers and conditionals.",
        keyChallenges:["Managing real-time game state with setInterval","Creating animated, responsive interactions with vanilla JS","Balancing game rules for win/loss conditions"],
        tools:"JavaScript • HTML5 • CSS3 • Photoshop",
    }, 
]
